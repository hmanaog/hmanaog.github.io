{"version":3,"sources":["Assets/logo.svg","Header/Header.js","Home/Home.js","ListItems/ListItems.js","Article/Article.js","App.js","reportWebVitals.js","index.js"],"names":["styles","display","alignItems","height","withRouter","props","Container","maxWidth","Box","style","src","ricardoLogo","alt","width","cursor","onClick","history","push","useStyles","makeStyles","formStyle","flexDirection","flexWrap","margin","textField","minWidth","marginRight","button","classes","useState","searchInput","setSearchInput","className","onSubmit","length","TextField","id","label","variant","onChange","event","target","value","Button","component","type","color","startIcon","disabled","box","grid","marginTop","link","textDecoration","card","minHeight","cardContent","padding","cardMedia","boxInCard1","boxInCard2","fontBold","fontWeight","fontSize","priceBox","articles","totalCount","items","setItems","useEffect","GetItemsFromRicardo","a","searchText","match","params","fetch","process","method","then","response","json","data","Typography","Grid","container","spacing","map","item","index","xs","sm","to","Card","CardContent","CardMedia","image","imageUrl","title","endDate","replace","slice","buyNowPrice","maxHeight","fontNormal","hrLine","article","setArticle","seller","setSeller","GetArticleFromRicardo","articleId","sellerId","subtitle","undefined","name","price","dangerouslySetInnerHTML","__html","descriptionHtml","App","exact","path","Home","ListItems","Article","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6feb6ddc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6f77fdaa.svg\";","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ricardoLogo from '../Assets/logo.svg';\r\n\r\nimport { Container, Box } from '@material-ui/core';\r\n\r\nconst styles = {\r\n\t// border: 'solid 1px blue',\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\theight: '60px',\r\n};\r\n\r\nconst Header = (props) => {\r\n\tconst handleClickLogo = () => {\r\n\t\tprops.history.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container maxWidth='lg'>\r\n\t\t\t<Box style={styles}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={ricardoLogo}\r\n\t\t\t\t\talt='ricardo'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '112px',\r\n\t\t\t\t\t\theight: '24px',\r\n\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={handleClickLogo}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n   formStyle: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      height: '60px',\r\n      flexWrap: 'wrap',\r\n      margin: '2rem 0rem',\r\n   },\r\n   textField: {\r\n      minWidth: '80%',\r\n      marginRight: '1rem',\r\n   },\r\n   button: {\r\n      minWidth: '10%',\r\n      height: '100%',\r\n   },\r\n});\r\n\r\nconst Home = (props) => {\r\n   const classes = useStyles();\r\n\r\n   const [searchInput, setSearchInput] = useState('');\r\n   const handleSearchInput = (event) => {\r\n      setSearchInput(event.target.value);\r\n   };\r\n\r\n   const handleSearchButton = () => {\r\n      if (searchInput.length) {\r\n         props.history.push(`/search/${searchInput}`);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <form className={classes.formStyle} onSubmit={handleSearchButton}>\r\n         <TextField\r\n            className={classes.textField}\r\n            id='outlined-basic'\r\n            label='Search text'\r\n            variant='outlined'\r\n            onChange={handleSearchInput}\r\n         />\r\n         <Button\r\n            className={classes.button}\r\n            component='button'\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            startIcon={<SearchIcon />}\r\n            disabled={!searchInput.length ? true : false}\r\n         >\r\n            Search\r\n         </Button>\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Card, CardContent, CardMedia, Typography } from '@material-ui/core';\r\n\r\n// Styles\r\nconst useStyles = makeStyles({\r\n   box: {\r\n      margin: '0rem 5rem',\r\n   },\r\n   grid: {\r\n      marginTop: '1rem',\r\n   },\r\n   link: {\r\n      textDecoration: 'none',\r\n   },\r\n   card: {\r\n      minHeight: '320px',\r\n   },\r\n   cardContent: {\r\n      padding: '0',\r\n   },\r\n   cardMedia: {\r\n      height: '150px',\r\n      width: 'auto',\r\n   },\r\n   boxInCard1: {\r\n      margin: '1rem 0.5rem 0rem 0.7rem',\r\n      minHeight: '50px',\r\n   },\r\n   boxInCard2: {\r\n      margin: '0rem 0.5rem 0rem 0.7rem',\r\n      minHeight: '50px',\r\n   },\r\n   fontBold: {\r\n      fontWeight: '700',\r\n   },\r\n   fontSize: {\r\n      fontSize: '14px',\r\n   },\r\n   priceBox: {\r\n      padding: '0.5rem 0.5rem 0rem 0.4rem',\r\n   },\r\n});\r\n\r\nconst ListItems = (props) => {\r\n   const classes = useStyles();\r\n\r\n   const [items, setItems] = useState({\r\n      articles: [],\r\n      totalCount: 0,\r\n   });\r\n\r\n   // Initiate useEffect when component mount\r\n   useEffect(() => {\r\n      GetItemsFromRicardo();\r\n   }, []);\r\n\r\n   // Fetch list of items from Ricardo API\r\n   const GetItemsFromRicardo = async () => {\r\n      const searchText = props.match.params.searchText;\r\n\r\n      await fetch(\r\n         `https://www.ricardo.ch/api/frontend/recruitment/search/?searchText=${searchText}&apiToken=${process.env.REACT_APP_API_TOKEN}`,\r\n         {\r\n            method: 'GET',\r\n         }\r\n      )\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            return setItems({\r\n               articles: data.articles,\r\n               totalCount: data.totalCount,\r\n            });\r\n         });\r\n   };\r\n\r\n   return (\r\n      <Box className={classes.box}>\r\n         <Typography variant='body2' color='textPrimary' component='p'>\r\n            Total count: {items.articles.length}{' '}\r\n         </Typography>\r\n\r\n         <Grid className={classes.grid} container spacing={3}>\r\n            {items &&\r\n               items.articles.map((item, index) => {\r\n                  return (\r\n                     <Grid item xs={12} sm={3} key={index}>\r\n                        <Link className={classes.link} to={`/article/${item.id}`}>\r\n                           <Card className={classes.card}>\r\n                              <CardContent className={classes.cardContent} style={{ padding: '0' }}>\r\n                                 <CardMedia className={classes.cardMedia} image={item.imageUrl} title={item.title} />\r\n                                 <Box className={classes.boxInCard1} component='div'>\r\n                                    <Typography\r\n                                       className={classes.fontBold}\r\n                                       variant='body2'\r\n                                       color='textPrimary'\r\n                                       component='p'\r\n                                    >\r\n                                       {item.title}{' '}\r\n                                    </Typography>\r\n                                 </Box>\r\n                                 <Box className={classes.boxInCard2} component='div'>\r\n                                    <Typography\r\n                                       className={classes.fontSize}\r\n                                       variant='subtitle2'\r\n                                       color='textPrimary'\r\n                                       component='p'\r\n                                    >\r\n                                       Ending on:{' '}\r\n                                       <Box className={classes.fontBold} component='span'>\r\n                                          {item.endDate.replace(/T/i, ' at ').slice(0, -1)}\r\n                                       </Box>{' '}\r\n                                    </Typography>\r\n                                 </Box>\r\n                                 <Box className={classes.priceBox}>\r\n                                    <Typography variant='body2' color='textPrimary'>\r\n                                       {item.buyNowPrice === null ? 0 : item.buyNowPrice} CHF{' '}\r\n                                    </Typography>\r\n                                 </Box>\r\n                              </CardContent>\r\n                           </Card>\r\n                        </Link>\r\n                     </Grid>\r\n                  );\r\n               })}\r\n         </Grid>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default withRouter(ListItems);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Card, CardContent, CardMedia, Typography } from '@material-ui/core';\r\n\r\n// Styles\r\nconst useStyles = makeStyles({\r\n   cardMedia: {\r\n      minHeight: '230px',\r\n      maxHeight: '690px',\r\n      maxWidth: '517px',\r\n      minWidth: '172px',\r\n   },\r\n   box: {\r\n      margin: '1rem 1rem 1rem 1.5rem',\r\n   },\r\n   fontBold: {\r\n      fontWeight: 'bold',\r\n   },\r\n   fontNormal: {\r\n      fontWeight: 'normal',\r\n   },\r\n   hrLine: {\r\n      width: '80%',\r\n   },\r\n});\r\n\r\nconst Article = (props) => {\r\n   const classes = useStyles();\r\n\r\n   const [article, setArticle] = useState({});\r\n   const [seller, setSeller] = useState({});\r\n\r\n   // Initiate useEffect when component mount\r\n   useEffect(() => {\r\n      GetArticleFromRicardo();\r\n   }, []);\r\n\r\n   // Fetch article info and user info from Ricardo API\r\n   const GetArticleFromRicardo = async () => {\r\n      const articleId = props.match.params.articleId;\r\n      await fetch(\r\n         `https://www.ricardo.ch/api/frontend/recruitment/article-details/?articleId=${articleId}&apiToken=${process.env.REACT_APP_API_TOKEN}`,\r\n         {\r\n            method: 'GET',\r\n         }\r\n      )\r\n         .then((response) => response.json())\r\n         .then(async (data) => {\r\n            setArticle(data);\r\n\r\n            const sellerId = data.sellerId;\r\n            await fetch(\r\n               `https://www.ricardo.ch/api/frontend/recruitment/user/?userId=${sellerId}&apiToken=${process.env.REACT_APP_API_TOKEN}`,\r\n               {\r\n                  method: 'GET',\r\n               }\r\n            )\r\n               .then((response) => response.json())\r\n               .then((data) => {\r\n                  setSeller(data);\r\n               });\r\n         });\r\n   };\r\n\r\n   return (\r\n      <Grid container spacing={3}>\r\n         <Grid item xs={12} sm={6}>\r\n            <CardMedia className={classes.cardMedia} component='img' image={article.imageUrl} title={article.title} />\r\n         </Grid>\r\n         <Grid item xs={12} sm={6}>\r\n            <Card>\r\n               <CardContent style={{ padding: '0' }}>\r\n                  <Box className={classes.box}>\r\n                     <Typography variant='h4' color='textPrimary'>\r\n                        {article.title}{' '}\r\n                     </Typography>\r\n                     {!article.subtitle ? undefined : (\r\n                        <Typography variant='subtitle2' color='textPrimary'>\r\n                           {article.subtitle}{' '}\r\n                        </Typography>\r\n                     )}\r\n                  </Box>\r\n                  <hr className={classes.hrLine} />\r\n                  <Box className={classes.box}>\r\n                     <Typography className={classes.fontBold} variant='body2' color='textPrimary'>\r\n                        Seller:{' '}\r\n                        <Box className={classes.fontNormal} component='span'>\r\n                           {seller.name}\r\n                        </Box>{' '}\r\n                     </Typography>\r\n                     <Typography className={classes.fontBold} variant='body2' color='textPrimary'>\r\n                        Price:{' '}\r\n                        <Box className={classes.fontNormal} component='span'>\r\n                           {article.price} CHF\r\n                        </Box>\r\n                     </Typography>\r\n                  </Box>\r\n                  <hr className={classes.hrLine} />\r\n                  <Box className={classes.box}>\r\n                     <div\r\n                        dangerouslySetInnerHTML={{\r\n                           __html: article.descriptionHtml,\r\n                        }}\r\n                     />\r\n                  </Box>\r\n               </CardContent>\r\n            </Card>\r\n         </Grid>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default withRouter(Article);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Header from './Header/Header';\r\nimport Home from './Home/Home';\r\nimport ListItems from './ListItems/ListItems';\r\nimport Article from './Article/Article';\r\n\r\nimport { Container } from '@material-ui/core';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<Header />\r\n\r\n\t\t\t<Container maxWidth='lg' style={{ padding: '2rem 1rem' }}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path={'/'} component={Home} />\r\n\t\t\t\t\t<Route path={'/search/:searchText'} component={ListItems} />\r\n\t\t\t\t\t<Route path={'/article/:articleId'} component={Article} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Router>\r\n\t\t\t<App />\r\n\t\t</Router>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}